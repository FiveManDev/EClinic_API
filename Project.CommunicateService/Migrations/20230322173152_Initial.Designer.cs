// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.CommunicateService.Data.Configurations;

#nullable disable

namespace Project.CommunicateService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230322173152_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Project.CommunicateService.Data.ChatMessage", b =>
                {
                    b.Property<Guid>("ChatMessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChatMessageID");

                    b.HasIndex("RoomID");

                    b.ToTable("ChatMessages", (string)null);
                });

            modelBuilder.Entity("Project.CommunicateService.Data.Room", b =>
                {
                    b.Property<Guid>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoomTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoomID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms", (string)null);
                });

            modelBuilder.Entity("Project.CommunicateService.Data.RoomType", b =>
                {
                    b.Property<Guid>("RoomTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomTypeID");

                    b.ToTable("RoomTypes", (string)null);

                    b.HasData(
                        new
                        {
                            RoomTypeID = new Guid("13accb41-1cad-4171-85aa-f3d76464c3dc"),
                            RoomTypeName = "Doctor"
                        });
                });

            modelBuilder.Entity("Project.CommunicateService.Data.VideoCall", b =>
                {
                    b.Property<Guid>("VideoCallID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VideoCallID");

                    b.HasIndex("RoomID");

                    b.ToTable("VideoCalls", (string)null);
                });

            modelBuilder.Entity("Project.CommunicateService.Data.ChatMessage", b =>
                {
                    b.HasOne("Project.CommunicateService.Data.Room", "Room")
                        .WithMany("ChatMessages")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PK_ChatRoom_Many_To_One_ChatMessage");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Project.CommunicateService.Data.Room", b =>
                {
                    b.HasOne("Project.CommunicateService.Data.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PK_RoomType_Many_To_One_Room");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Project.CommunicateService.Data.VideoCall", b =>
                {
                    b.HasOne("Project.CommunicateService.Data.Room", "Room")
                        .WithMany("VideoCalls")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PK_ChatRoom_One_To_One_VideoCall");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Project.CommunicateService.Data.Room", b =>
                {
                    b.Navigation("ChatMessages");

                    b.Navigation("VideoCalls");
                });

            modelBuilder.Entity("Project.CommunicateService.Data.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
